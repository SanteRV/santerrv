#include <stdio.h>
#include <stdint.h>

// Función para acumular el producto interno elemento a elemento
double accumulate_elementwise(const double* a, const double* b, int n) {
    double sum = 0.0;
    for (int i = 0; i < n; i++) {
        sum += a[i] * b[i];
    }
    return sum;
}

// Función para acumular el producto interno en bloques de 2 elementos
double accumulate_in_blocks2(const double* a, const double* b, int n) {
    double sum = 0.0;
    for (int i = 0; i < n; i += 2) {
        sum += (a[i] * b[i]) + (a[i + 1] * b[i + 1]);
    }
    return sum;
}

// Función para acumular el producto interno en bloques de 4 elementos
double accumulate_in_blocks4(const double* a, const double* b, int n) {
    double sum = 0.0;
    for (int i = 0; i < n; i += 4) {
        sum += (a[i] * b[i]) + (a[i + 1] * b[i + 1]) + (a[i + 2] * b[i + 2]) + (a[i + 3] * b[i + 3]);
    }
    return sum;
}

// Función para acumular el producto interno en bloques de 8 elementos
double accumulate_in_blocks8(const double* a, const double* b, int n) {
    double sum = 0.0;
    for (int i = 0; i < n; i += 8) {
        sum += (a[i] * b[i]) + (a[i + 1] * b[i + 1]) + (a[i + 2] * b[i + 2]) + (a[i + 3] * b[i + 3]) +
               (a[i + 4] * b[i + 4]) + (a[i + 5] * b[i + 5]) + (a[i + 6] * b[i + 6]) + (a[i + 7] * b[i + 7]);
    }
    return sum;
}

// Este es el archivo principal, pero aquí solo se definen las funciones.
// La implementación de estas funciones en un archivo Jupyter Notebook se debe hacer por separado.

int main() {
    // Aquí puede agregar código para probar las funciones si lo desea.
    return 0;
}
